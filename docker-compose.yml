version: "3"
services:
  postgresdb:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_PASSWORD: password
    #    volumes:
    #      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"




  order_service:
    build: order_service
    ports:
      - "1235:1235"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: superuser
      RABBITMQ_PASS: password
      RABBITMQ_PORT: 5672
      HOST: postgresdb
      USER: postgres
      PASSWORD: password
      DATABASE: pet_project
    volumes:
      - ./order_service:/app/order_service
    depends_on:
      - postgresdb
      - rabbitmq
    restart: unless-stopped






  order_service_consumer:
    build: order_service
    #    ports:
    #      - "1235:1235"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: superuser
      RABBITMQ_PASS: password
      RABBITMQ_PORT: 5672
      HOST: postgresdb
      USER: postgres
      PASSWORD: password
      DATABASE: pet_project
    volumes:
      - ./order_service:/app/order_service

    restart: on-failure
    command:
      "entrypoint_consumer.sh"



  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: superuser
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - "rabbitmq_data:/data"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - order_service


volumes:
  rabbitmq_data:




